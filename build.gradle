buildscript {
    ext {
        springDependencyPluginVersion = '1.0.4.RELEASE'
        springBootVersion = '1.5.10.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:$springDependencyPluginVersion")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

ext {
    jaxbVersion = '2.3.0'
    mockitoVersion = '1.10.19'
}

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR7'
    }
}

configurations {
    providedRuntime
}

dependencies {
    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-tx'
    compile 'org.springframework:spring-orm'

    compile 'javax.annotation:jsr250-api'
    compile 'org.aspectj:aspectjweaver'
    compile 'org.hibernate:hibernate-entitymanager'
    compile 'com.h2database:h2'
    compile 'com.mchange:c3p0'
    compile 'org.slf4j:slf4j-api'

    compile 'com.google.guava:guava'
    compile 'org.apache.commons:commons-lang3'
    compile 'commons-fileupload:commons-fileupload'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-actuator'

    compile "javax.xml.bind:jaxb-api:$jaxbVersion"


    testCompile 'org.springframework:spring-test'
    testCompile 'junit:junit'
    testCompile "org.mockito:mockito-all:$mockitoVersion"
    testCompile 'org.hamcrest:hamcrest-all'


    providedRuntime 'org.springframework.boot:spring-boot-starter-jetty'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
}

def bootMainClassName = 'org.maksim.training.mtapp.Application'

war {
    manifest {
        attributes 'Main-Class': bootMainClassName
    }
}

springBoot {
    mainClass = bootMainClassName
}

jacoco {
    toolVersion = "0.7.5+"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}